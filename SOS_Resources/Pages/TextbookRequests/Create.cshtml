@page
@model SOS_Resources.Pages.TextbookRequests.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Request Textbooks</h1>


<div>
    <h4>Selected Textbook</h4>
    <dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Textbook.Title)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Textbook.Title)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Textbook.Author)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Textbook.Author)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Textbook.Edition)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Textbook.Edition)
    </dd>
    <dt class="col-sm-2">
        Copy ID@* @Html.DisplayNameFor(model => model.Copy.ID) *@
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Copy.ID)
    </dd>
    </dl>
</div>
<hr />
<p>@Model.SOSUser.DisplayPrefName, do you want to request this textbook?</p>

<form method="post">
        <input type="hidden" name="textbookID" asp-for="Textbook.ID" />
        <input type="hidden" name="copyID" asp-for="Copy.ID" />
        <input type="submit" value="Submit Request" class="btn btn-primary" />
</form>

<div>
    <a asp-page="/Textbooks/SelectBook">Back to Textbook Selection</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
